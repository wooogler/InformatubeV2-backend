### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Comment {
  author: User!
  authorId: Int!
  createdAt: DateTime!
  dislikeUsers(skip: Int): [User!]!
  id: Int!
  imageUrl: String!
  likeUsers(skip: Int): [User!]!
  sort: Float!
  text: String!
  time: String!
  url: String!
}

scalar DateTime

type Mutation {
  cancelDislike(commentId: Int): Comment!
  cancelLike(commentId: Int): Comment!
  createComment(image: Upload, text: String, time: String, url: String): Comment!
  dislike(commentId: Int): Comment!
  like(commentId: Int): Comment!
  login(name: String!): AuthPayload!
  sortWithCF(dislikeId: [Int!], likeId: [Int!]): Boolean!
}

type Query {
  comments(skip: Int): [Comment!]!
  me: User
  users(skip: Int): [User!]!
  viewComments(sortNum: Float!): [Comment!]!
  viewRandomComments: [Comment!]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  comments(skip: Int): [Comment!]!
  dislikeComments(skip: Int): [Comment!]!
  id: Int!
  likeComments(skip: Int): [Comment!]!
  name: String!
}
